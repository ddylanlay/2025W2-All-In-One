name: Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  galaxy-deployment:
    runs-on: ubuntu-latest
    name: Deployment to Galaxy
    steps:
      - uses: actions/checkout@v4

      # Install Meteor CLI
      - name: Install Meteor
        run: curl https://install.meteor.com/ | sh

      # Install dependencies
      - name: Install NPM dependencies
        run: npm install

      # Install expect via apt-get (more reliable than brew)
      - name: Install expect
        run: |
          sudo apt-get update
          sudo apt-get install -y expect

      # Galaxy login step
      - name: Galaxy login
        working-directory: ./scripts
        env:
          GALAXY_USERNAME: ${{ secrets.GALAXY_USERNAME }}
          GALAXY_PASSWORD: ${{ secrets.GALAXY_PASSWORD }}
        run: |
          sudo apt-get update
          sudo apt-get install -y expect
          ls -l ./galaxy-login.sh       # Check script presence and permissions
          export PATH="$HOME/.meteor:$PATH"
          chmod +x ./galaxy-login.sh
          ./galaxy-login.sh "$GALAXY_USERNAME" "$GALAXY_PASSWORD"
          export DEPLOY_HOSTNAME=ap-southeast-2.galaxy.meteor.com
          meteor deploy 20251pm-allinone.au.meteorapp.com --settings settings.json --free --mongo

      # Create settings.json
      - name: Inject settings
        run: |
          echo "{
            \"public\": {
              \"GOOGLE_MAPS_API_KEY\": \"${{ secrets.GOOGLE_MAPS_API_KEY }}\"
            },
            \"private\": {
              \"AZURE_CONNECTION_STRING\": \"${{ secrets.AZURE_CONNECTION_STRING }}\"
            }
          }" > settings.json 

      # Deploy to Galaxy
      - name: Deploy
        run: |
          export PATH="$HOME/.meteor:$PATH"
          export DEPLOY_HOSTNAME=ap-southeast-2.galaxy.meteor.com
          meteor deploy 20251pm-allinone.au.meteorapp.com --settings settings.json --free --mongo
